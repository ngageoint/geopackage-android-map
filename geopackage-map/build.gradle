plugins {
    id "com.android.library"
    id "maven-publish"
}


archivesBaseName = "geopackage-android-map"

android {
    namespace 'mil.nga.geopackage.map'
    testNamespace "mil.nga.geopackage.map.test"

    compileSdk 34

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 34
        multiDexEnabled true

        testApplicationId 'mil.nga.geopackage.map.test'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    configurations {
        javadocDeps
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
        }
    }

    tasks.register('javadoc', Javadoc) {
        title = "$archivesBaseName $version API"
        source = android.sourceSets.main.java.srcDirs
        dependsOn("generateDebugRFile")
        dependsOn("generateReleaseRFile")
        classpath += configurations.javadocDeps
        classpath += files("${android.sdkDirectory}/extras/google/google_play_services/libproject/google-play-services_lib/libs/google-play-services.jar")
        options.source = "11"
        options.links "https://ngageoint.github.io/tiff-java/docs/api/"
        options.links "https://ngageoint.github.io/projections-java/docs/api/"
        options.links "https://ngageoint.github.io/coordinate-reference-systems-java/docs/api/"
        options.links "https://ngageoint.github.io/simple-features-java/docs/api/"
        options.links "https://ngageoint.github.io/simple-features-wkb-java/docs/api/"
        options.links "https://ngageoint.github.io/simple-features-wkt-java/docs/api/"
        options.links "https://ngageoint.github.io/simple-features-proj-java/docs/api/"
        options.links "https://ngageoint.github.io/simple-features-geojson-java/docs/api/"
        options.links "https://ngageoint.github.io/ogc-api-features-json-java/docs/api/"
        options.links "https://ngageoint.github.io/color-java/docs/api/"
        options.links "https://ngageoint.github.io/geopackage-core-java/docs/api/"
        options.links "https://ngageoint.github.io/geopackage-android/docs/api/"
        options.links "https://ormlite.com/javadoc/ormlite-core/"
        options.links "https://ormlite.com/javadoc/ormlite-android/"
        options.links "https://hjg.com.ar/pngj/apidocs/"
        options.linksOffline "https://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
        options.linksOffline "https://developers.google.com/android/reference", "${android.sdkDirectory}/extras/google/google_play_services/reference"
        destinationDir = file("../javadoc/")
        failOnError false
    }

    tasks.register('javadocJar', Jar) {
        archiveClassifier.set("javadoc")
        from javadoc
    }

    tasks.register('sourcesJar', Jar) {
        archiveClassifier.set("sources")
        from sourceSets.main.java.srcDirs
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    publishing {
        singleVariant("release")
    }

}

afterEvaluate {

    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.getJavaCompileProvider().get().classpath.files
    })

    publishing {
        publications {
            maven(MavenPublication) {
                from components.release
                artifact javadocJar
                artifact sourcesJar

                groupId = group
                artifactId = archivesBaseName

                pom {
                    name = 'GeoPackage Android Map'
                    packaging = 'aar'
                    description = 'GeoPackage Android Map implementation'
                    url = 'https://github.com/ngageoint/geopackage-android-map'

                    scm {
                        url = 'git@github.com:ngageoint/geopackage-android-map.git'
                        connection = 'scm:git:git@github.com:ngageoint/geopackage-android-map.git'
                        developerConnection = 'scm:git:git@github.com:ngageoint/geopackage-android-map.git'
                    }

                    licenses {
                        license {
                            name = 'The MIT License (MIT)'
                            url = 'https://github.com/ngageoint/geopackage-android-map/blob/master/LICENSE.txt'
                            distribution = 'repo'
                        }
                    }

                    organization {
                        name = 'National Geospatial-Intelligence Agency'
                        url = 'https://www.nga.mil'
                    }

                    developers {
                        developer {
                            id = 'nruss11-om'
                            name = 'Nathan Russell'
                            email = 'nathan.russell@omnifederal.com'
                            organizationUrl = 'https://omnifederal.com/'
                            timezone = 'UTC-07'
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    api 'com.google.android.gms:play-services-maps:18.2.0'
    api 'com.google.maps.android:android-maps-utils:3.5.3'
    api 'mil.nga.geopackage:geopackage-android:6.7.5'
    //api project(':geopackage-sdk') // uncomment me to build locally
    javadocDeps 'mil.nga.geopackage:geopackage-android:6.7.5'
    testImplementation 'androidx.multidex:multidex:2.0.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
}
